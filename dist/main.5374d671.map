{"version":3,"sources":["main.js"],"names":["x","localStorage","getItem","xObject","JSON","parse","console","log","hashMap","logo","url","$siteList","$","$lastLi","find","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,IAAEC,aAAaC,OAAb,CAAqB,GAArB,CAAR;AACA;AACA,IAAMC,UAAQC,KAAKC,KAAL,CAAWL,CAAX,CAAd;AACAM,QAAQC,GAAR,CAAYJ,OAAZ;AACA;AACA,IAAMK,UAAQL,WAAW,CACrB,EAACM,MAAK,GAAN,EAAUC,KAAI,sBAAd,EADqB,EAErB,EAACD,MAAK,GAAN,EAAUC,KAAI,0BAAd,EAFqB,CAAzB;AAIAJ,QAAQC,GAAR,CAAYC,OAAZ;AACA,IAAMG,YAAUC,EAAE,WAAF,CAAhB;AACA,IAAMC,UAAQF,UAAUG,IAAV,CAAe,SAAf,CAAd;AACA;;;;;;;;;;;AAYA,IAAMC,cAAY,SAAZA,WAAY,CAACL,GAAD,EAAO;AACrB,WAAOA,IAAIM,OAAJ,CAAY,SAAZ,EAAsB,EAAtB,EACEA,OADF,CACU,UADV,EACqB,EADrB,EAEEA,OAFF,CAEU,MAFV,EAEiB,EAFjB,EAGEA,OAHF,CAGU,MAHV,EAGiB,EAHjB,CAAP;AAIQ;AACX,CAND;;AAQA;AACA,IAAMC,SAAO,SAAPA,MAAO,GAAI;AACb;AACAN,cAAUG,IAAV,CAAe,iBAAf,EAAkCI,MAAlC;AACAV,YAAQW,OAAR,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAc;AAC1B,YAAMC,MAAIV,yFAGkBQ,KAAKX,IAHvB,kDAIkBM,YAAYK,KAAKV,GAAjB,CAJlB,kPAYPa,YAZO,CAYMV,OAZN,CAAV;AAaAS,YAAIE,EAAJ,CAAO,OAAP,EAAe,YAAI;AACfC,mBAAOC,IAAP,CAAYN,KAAKV,GAAjB;AACH,SAFD;AAGA;AACAY,YAAIE,EAAJ,CAAO,OAAP,EAAe,QAAf,EAAwB,UAACG,CAAD,EAAK;AACzBA,cAAEC,eAAF;AACApB,oBAAQqB,MAAR,CAAeR,KAAf,EAAqB,CAArB;AACA;AACAJ;AACH,SALD;AAMH,KAxBD;AAyBH,CA5BD;AA6BA;AACAA;;AAEA;AACAL,EAAE,YAAF,EACKY,EADL,CACQ,OADR,EACgB,YAAI;AACZ,QAAId,MAAIe,OAAOK,MAAP,CAAc,YAAd,CAAR;AACA;AACA,QAAGpB,IAAIqB,OAAJ,CAAY,MAAZ,MAAsB,CAAzB,EAA2B;AACvBrB,cAAI,aAAWA,GAAf;AACH;AACDF,YAAQwB,IAAR,CAAa;AACTvB,cAAKM,YAAYL,GAAZ,EAAiB,CAAjB,EAAoBuB,WAApB,EADI;AAETvB,aAAIA;AAFK,KAAb;AAIAO;AACH,CAZL;;AAcA;AACAQ,OAAOS,cAAP,GAAsB,YAAI;AACtB;AACA,QAAMC,SAAO/B,KAAKgC,SAAL,CAAe5B,OAAf,CAAb;AACA;AACAP,iBAAaoC,OAAb,CAAqB,GAArB,EAAyBF,MAAzB;AACH,CALD;;AAOAvB,EAAE0B,QAAF,EAAYd,EAAZ,CAAe,UAAf,EAA0B,UAACG,CAAD,EAAK;AAC3B,QAAMY,MAAIZ,EAAEY,GAAZ;AACA,SAAI,IAAIC,IAAE,CAAV,EAAYA,IAAEhC,QAAQiC,MAAtB,EAA6BD,GAA7B,EAAiC;AAC7B,YAAGD,QAAM/B,QAAQgC,CAAR,EAAW/B,IAAjB,IAAyB8B,IAAIN,WAAJ,OAAoBzB,QAAQgC,CAAR,EAAW/B,IAA3D,EAAgE;AAC5DgB,mBAAOC,IAAP,CAAYlB,QAAQgC,CAAR,EAAW9B,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.5374d671.map","sourceRoot":"..\\src","sourcesContent":["\r\n\r\n// 取出localStorage里寄放在x里面的hashMap字符串\r\nconst x=localStorage.getItem('x')\r\n// 转为对象：XObject记录包含打开的网页的hashMap对象\r\nconst xObject=JSON.parse(x)\r\nconsole.log(xObject)\r\n// hashMap来存储网站（li标签）：初始存A站、B站；但当要从打开的网页返回时，hashMap取XObject\r\nconst hashMap=xObject || [\r\n    {logo:'A',url:'https://www.acfun.cn'},\r\n    {logo:'B',url:'https://www.bilibili.com'}\r\n]\r\nconsole.log(hashMap)\r\nconst $siteList=$('.siteList')\r\nconst $lastLi=$siteList.find('.lastLi')\r\n/* <li>\r\n        <a href=\"https://www.bilibili.com/\">\r\n            <div class=\"site\">\r\n                <div class=\"logo\">\r\n                    <img src=\"./images/bilibili.png\" alt=\"\">\r\n                </div>\r\n                <div class=\"link\">bilibili.com</div>\r\n            </div>\r\n        </a>\r\n</li> */\r\n\r\n\r\nconst simplifyUrl=(url)=>{\r\n    return url.replace('http://','')\r\n            .replace('https://','')\r\n            .replace('www.','')\r\n            .replace(/\\/.*/,'')  \r\n            // 最后，配合正则表达式删除 com 之后 以 / 开头的所有字符\r\n}\r\n\r\n// 遍历渲染hashMap的每个网点对象：插入到.siteList，且插在新增按钮前面\r\nconst render=()=>{\r\n    // hashMap元素渲染到.siteList之前，把.siteList现有的除最后 新增按钮 以外的 li 全删除，再渲染hashMap\r\n    $siteList.find('li:not(.lastLi)').remove()\r\n    hashMap.forEach((node,index)=>{ \r\n        const $li=$(`\r\n        <li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon-close\">\r\n                    <use href=\"#close-small\"></use>\r\n                </svg>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        `).insertBefore($lastLi)\r\n        $li.on('click',()=>{\r\n            window.open(node.url)\r\n        })\r\n        // 点击.close，阻止冒泡\r\n        $li.on('click','.close',(e)=>{\r\n            e.stopPropagation()\r\n            hashMap.splice(index,1)\r\n            // 对hashMap删除站点，故删除后要重新渲染hashMap\r\n            render()\r\n        })\r\n    })    \r\n}\r\n// 用render提交hashMap初始存储的网站\r\nrender()\r\n\r\n// 处理新增站点\r\n$('.addButton')\r\n    .on('click',()=>{\r\n        let url=window.prompt('请问想添加的网址是啥')\r\n        // 若http在URL里出现的位置不是从0开始\r\n        if(url.indexOf('http')!==0){\r\n            url='https://'+url\r\n        }\r\n        hashMap.push({\r\n            logo:simplifyUrl(url)[0].toUpperCase(),\r\n            url:url\r\n        })\r\n        render()\r\n    })\r\n\r\n// 用localStorage存储hashMap，当从打开的网页返回的时候，可以再读取localStorage里的hashMap，防止丢失站点\r\nwindow.onbeforeunload=()=>{\r\n    // localStorage只能存字符串，故先把hashMap对象转为字符串\r\n    const string=JSON.stringify(hashMap)\r\n    // 在本地存储localStorage里设置x存string\r\n    localStorage.setItem('x',string)\r\n}\r\n\r\n$(document).on('keypress',(e)=>{\r\n    const key=e.key\r\n    for(let i=0;i<hashMap.length;i++){\r\n        if(key===hashMap[i].logo || key.toUpperCase()===hashMap[i].logo){\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n"]}